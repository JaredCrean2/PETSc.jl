name: CI
on:
  push:
    branches:
      - main
      - staging
      - trying
    tags: '*'
  pull_request:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: always.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 'lts'
          #- '1.11'
        os:
          - macOS-latest
          #- ubuntu-latest
          #- windows-latest
        arch:
          - x64 
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - name: use MPICH_jll
        shell: julia --color=yes --project=. {0}
        run: |
          #using Pkg
          #Pkg.add("MPIPreferences")
          using MPIPreferences
          MPIPreferences.use_jll_binary("MPICH_jll", export_prefs=true)
          rm("test/Manifest.toml")
      - uses: julia-actions/julia-runtest@latest
        #shell: julia --color=yes --project=test {0}
        